[gcode_macro _global_var]
variable_pause_park:{'x': -2, 'y': -1, 'z': 10, 'e': 1}
variable_cancel_park:{'x': 0, 'y': 152.5, 'z': 10, 'e': 1}
variable_z_maximum_lifting_distance: 153
variable_pause_resume_travel_speed: 150
variable_load_filament_extruder_temp: 250
variable_has_z_offset_calibrated: False
variable_filament_sensor_print: False
gcode:

[gcode_macro mainled_on]
gcode:
    SET_PIN PIN=main_led VALUE=1

[gcode_macro mainled_off]
gcode:
    SET_PIN PIN=main_led VALUE=0

[gcode_macro _IDLE_TIMEOUT]
gcode:
    {% if printer.print_stats.state == "paused" %}
      RESPOND TYPE=echo MSG="No operations in 30min!"
    {% else %}
      M84
      TURN_OFF_HEATERS
    {% endif %}

[gcode_macro ALL_FAN_OFF]
gcode:
    SET_FAN_SPEED FAN=fan0 SPEED=0
    SET_FAN_SPEED FAN=fan2 SPEED=0

[gcode_macro CLEAN_NOZZLE] 
gcode:
    BED_MESH_CLEAR
    {% if printer.toolhead.homed_axes != "xyz" %}
       G28
    {% endif %}
    M109 S200
    G90 
    G1 X30 Y30 F9000
    G4 P100
    M400
    #RUN_PROBE_VIR_CONTACT
    G91
    G1 Z2
    G90
    G1 X-9.2 Y0
    G91
    G1 Z-2.4
    G90
    G1 Y45 F2400
    G1 X-8.2 Y10
    G1 Y45 
    G1 X-8.2 Y10
    G1 Y38
    G1 X-9.2 Y12
    G1 Y38
    G1 X-9.2 Y12
    G1 Y33 
    G1 X-8.2 Y14
    G1 Y33 
    G1 X-8.2 Y14
    G1 Y28
    G1 X-9.2 Y16
    G1 Y28
    G1 X-9.2 Y16
    G1 Z3
    G1 X30 Y30 F9000
    G4 P300
    M400
    #RUN_PROBE_VIR_CONTACT
    M106 S255
    M109 S130
    M106 S0
    G1 Z5

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
    {% set origin_square_corner_velocity_val = printer.toolhead.square_corner_velocity|float %}
    {% set temporarily_square_corner_velocity_val = 1.0 %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={temporarily_square_corner_velocity_val}
    EDDYNG_BED_MESH_EXPERIMENTAL
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={origin_square_corner_velocity_val}

[gcode_macro CENTER]
description: Move the toolhead to the center of objects to be printed, or center of build plate
gcode:
    {% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
    {% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
    {% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
    {% set x_max = all_points | map(attribute=0) | max | default(center_x) %}
    {% set y_max = all_points | map(attribute=1) | max | default(center_y) %}
    {% set travel_speed = (printer.toolhead.max_velocity) * 30 | float %}

    {% set center_x = (x_min + x_max) / 2.0 | round(1) %}
    {% set center_y = (y_min + y_max) / 2.0 | round(1) %}

    SAVE_GCODE_STATE NAME=Pre_Center_State
    G90
    G0 X{center_x} Y{center_y} F{travel_speed}
    M400
    RESTORE_GCODE_STATE NAME=Pre_Center_State

[gcode_macro START_PRINT]
gcode:
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set low_temp_bed_soak_min = params.LOW_TEMP_SOAK_MIN|default("0")|int %}
  {% set high_temp_bed_soak_min = params.HIGH_TEMP_SOAK_MIN|default("25")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set have_chamber_thermistor = False %}

  #_REQUIRE_HOMED
  G28

  G90
  SMART_PARK

  CLEAR_PAUSE
  BED_MESH_CLEAR

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  STATUS_HEATING
  {% if target_bed > 90 %}
    M106 S255 # Part fan
    #SET_PIN PIN=nevermore VALUE=1 # Turn on chamber fan
    M190 S{target_bed}
    {% if have_chamber_thermistor %}
      SET_DISPLAY_TEXT MSG="Bed to {target_chamber}C"
      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    {% else %}
      SET_DISPLAY_TEXT MSG="Soak: {high_temp_bed_soak_min}m @ {target_bed}C"
      G4 P{ high_temp_bed_soak_min * 60000 }
    {% endif %}
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed to {target_bed}C"
    M190 S{target_bed}
    SET_DISPLAY_TEXT MSG="Soak: {low_temp_bed_soak_min}m @ {target_bed}C"
    G4 P{ low_temp_bed_soak_min * 60000 }
  {% endif %}

  #STATUS_LEVELING
  #QUAD_GANTRY_LEVEL

  # Clean at reasonable temp
  STATUS_CLEANING
  #_CLEAN_NOZZLE TEMP=200 END_TEMP=150
  CLEAN_NOZZLE

  # Home Z again after QGL and cleaning
  STATUS_HOMING
  G28 Z

  SET_DISPLAY_TEXT MSG="Tappy tap"
  CENTER # this is center of parts during a print
  PROBE_EDDY_NG_TAP

  STATUS_MESHING
  #BED_MESH_CALIBRATE ADAPTIVE=1 #METHOD=RAPID_SCAN
  BED_MESH_CALIBRATE

  STATUS_READY
  SMART_PARK

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}C"
  STATUS_HEATING
  M107  # Turns off partcooling fan
  M109 S{target_extruder}  # Heats the nozzle to printing temp

  STATUS_PRINTING
  LINE_PURGE

[gcode_macro STUDID_START_PRINT]
gcode:
    CLEAR_PAUSE
    M117 Clean Nozzle
    CLEAN_NOZZLE

    G28 Z
    CENTER
    PROBE_EDDY_NG_TAP

    BED_MESH_CALIBRATE
    M117 {last_file}
    
[gcode_macro END_PRINT]
description: 
variable_state: 'normal'
gcode:
    {% set z_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance|int %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}

    M117 Finish Print!!!
    {% if printer.toolhead.homed_axes|lower == "xyz" %}
        G91
        {% if printer['filament_switch_sensor filament_sensor'].enable == True and
            printer['filament_switch_sensor filament_sensor'].filament_detected == True
        %}
            {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target and 
                printer.extruder.temperature >= e_mintemp)
            %}
                G1 E-2 F2700
                G1 E-2 Z0.2 F2400
            {% endif %}
        {% endif %}

        {% if (printer.gcode_move.position.z + 10) < z_max %}
            G1 Z+10 F3000
        {% else %}
            G1 Z+{(z_max - printer.gcode_move.position.z)} F3000
        {% endif %}
        G90
        G1 X-2 Y152.5 F9000
    {% endif %}
    ALL_FAN_OFF
    TURN_OFF_HEATERS 
    M220 S100
    M221 S100
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=filament_sensor_print VALUE=False
    CLEAR_PAUSE
    PRINT_END
    M84 X Y Z E 
    {action_respond_info("Finish Print!")}

[gcode_macro CANCEL_PRINT]
description: 
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set x_park = printer['gcode_macro _global_var'].cancel_park.x|float %}
    {% set y_park = printer['gcode_macro _global_var'].cancel_park.y|float %}
    {% set z_park = printer['gcode_macro _global_var'].cancel_park.z|float %}
    {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
    {% set e_restract = printer['gcode_macro _global_var'].cancel_park.e|float %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}

    CANCEL_PRINT_BASE
    {% if printer.toolhead.homed_axes|lower == "xyz" %}
        G91
        {% if printer['filament_switch_sensor filament_sensor'].enabled == True and 
            printer['filament_switch_sensor filament_sensor'].filament_detected == True
        %}
            {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target and 
                printer.extruder.temperature >= e_mintemp)
            %}
                G1 E-{e_restract} F500
            {% else %}
                {action_respond_info("Nozzle not hot enough")}
            {% endif %}
        {% endif %}

        {%if (printer.gcode_move.position.z + 10) < z_lift_max %}
            G1 Z+10 F3000
        {% else %}
            G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
        {% endif %}
            G90
            G1 X{x_park} Y{y_park} F9000
    {% endif %}
    ALL_FAN_OFF
    TURN_OFF_HEATERS 
    M220 S100
    M221 S100
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=filament_sensor_print VALUE=False
    CLEAR_PAUSE
    PRINT_END
    M84 X Y Z E 
    {action_respond_info("Cancel Print Success!")}

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_state: 'normal'
gcode:
    {% if printer.pause_resume.is_paused == False %}
        {% set x_park = printer['gcode_macro _global_var'].pause_park.x|float %}
        {% set y_park = printer['gcode_macro _global_var'].pause_park.y|float %}
        {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
        {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}

        {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}
        
        {action_respond_info("Pause Print!")}
        
        PAUSE_BASE
        M117 Pause Print!!!
        G91
        {% if printer.toolhead.homed_axes|lower == "xyz" %}
            {% if (printer.gcode_move.position.z + 5) < z_lift_max %}
                G1 Z+5 F3000
            {% else %}
                G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
            {% endif %}
            G90
            {% if printer.gcode_move.position.x != x_park and
                    printer.gcode_move.position.y != y_park     
            %}
                G1 X{x_park} Y{y_park} F{printer["gcode_macro _global_var"].pause_resume_travel_speed * 60}
            {% endif %}
        {% endif %}
        M104 S{printer.extruder.target}
    
        {% if state == 'normal' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                {% if printer['filament_switch_sensor filament_sensor'].enabled == True and 
                    printer['filament_switch_sensor filament_sensor'].filament_detected == True
                %}
                    G91
                    G1 E-{e_restract} F300
                    G90
                {% endif %}
            {% endif %}
        {% elif state == 'filament_change' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                G91
                G1 E-10 F1500
                G1 E-20 F600
                M400
                G4 P3000
                G1 E-50 F300 
                G90
            {% endif %}
        {% endif %}
    {% endif %}


[delayed_gcode _resume_wait]
gcode:
    {% if printer['gcode_macro RESUME'].execute|lower != 'false' %}
        RESUME
    {% endif %}


[gcode_macro RESUME]
description: Pause the actual running print
rename_existing: RESUME_BASE
variable_state: 'normal'
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set extruder_target_temp = printer.extruder.target|int %}

    {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

    {% if state == 'filament_change' %}
        {% if printer["filament_switch_sensor filament_sensor"].enable == True and
              printer["filament_switch_sensor filament_sensor"].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {% if printer.extruder.temperature + 5 >= printer.extruder.target %}
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% else %}
                M104 S{extruder_target_temp}
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_target_temp}
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% endif %}
            {action_respond_info("Print resumming!")}
            RESUME_BASE
        {% endif %}
    {% elif state == 'normal' %}
        {% if printer['filament_switch_sensor filament_sensor'].enable != True and
              printer['filament_switch_sensor filament_sensor'].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {action_respond_info("Print resumming!")}
            G91
            G1 E{e_restract} F300
            G90
            M117 Printing now!!!
            RESUME_BASE
        {% endif %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=filament_sensor_print VALUE=False


[gcode_macro LOAD_FILAMENT]
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}

    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" %}
            M104 S{extruder_temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if printer.extruder.target == 0 %}
                M104 S{extruder_temp}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_temp}
            {% else %}
                M104 S{printer.extruder.target}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{printer.extruder.target}
            {% endif %}
        {% endif %}
        M117 Extruding...
        G91 
        G1 E45 F300
        G1 E30 F150
        G90
        M400
        M117 Extrude Finish
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
    {% else %}
        {action_respond_info("Don't load filament during printing!!!")}
    {% endif %}

    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}

    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" %}
            M104 S{extruder_temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if printer.extruder.target == 0 %}
                M104 S{extruder_temp}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_temp}
            {% else %}
                M104 S{printer.extruder.target}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{printer.extruder.target}
            {% endif %}
        {% endif %}
        M117 Retracting...
        G91
        G1 E+25 F300
        G1 E-10 F1500
        G1 E-20 F600
        M400
        G4 P3000
        G1 E-50 F300 
        G90
        M400
        M117 Retract Finish
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
    {% else %}
        {action_respond_info("Don't unload filament during printing!!!")}
    {% endif %}

[gcode_macro M109]
rename_existing: M99109
gcode:    
    {% set s = params.S|float %}    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+2}   
    {% endif %}
    
[gcode_macro M190]

rename_existing: M99190
gcode:    
    {% set s = params.S|float %}
    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+2}  
    {% endif %}

[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
        SET_FAN_SPEED FAN={fan} SPEED={speed}

[gcode_macro M107]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
        SET_FAN_SPEED FAN={'fan0'} SPEED=0
        SET_FAN_SPEED FAN={'fan2'} SPEED=0
  
[gcode_macro M600]
gcode:
    PAUSE STATE=filament_change

[delayed_gcode VERIFY_PRINT_D]
initial_duration: 0 
gcode:
    {% if printer.print_stats.state == "printing" and printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
        {% set d_current = printer.print_stats.filament_used|float %} 
        {% if d_current < printer["gcode_macro CONTINUE_PRINT_D"].end_d %} 
            UPDATE_DELAYED_GCODE ID=VERIFY_PRINT_D DURATION=1 
        {% else %}
            M600
            UPDATE_DELAYED_GCODE ID=VERIFY_PRINT_D DURATION=0 
            SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=filament_sensor_print VALUE=True
        {% endif %}
    {% else %}
        UPDATE_DELAYED_GCODE ID=VERIFY_PRINT_D DURATION=0
    {% endif %}
